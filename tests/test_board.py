import sys, os

sys.path.append(os.path.join(os.path.dirname(__file__), "..", "src"))
from othello.board import BitBoard


# Removed the `mask_from_ascii` function as its logic is redundant with `BitBoard.from_ascii`.
def test_initial_setup():
    b = BitBoard.initial()
    expected = BitBoard.from_ascii(
        """
........
........
........
...WB...
...BW...
........
........
........
"""
    )
    assert b == expected


def test_legal_moves_initial():
    b = BitBoard.initial()
    moves = b.legal_moves(b.black, b.white)
    expected = mask_from_ascii(
        """
........
........
...X....
..X.....
.....X..
....X...
........
........
"""
    )
    assert moves == expected


def test_apply_move():
    b = BitBoard.initial()
    move = 1 << (63-19)  # c4
    new_b = b.apply_move(move, True)
    expected = BitBoard.from_ascii(
        """
........
........
...B....
...BB...
...BW...
........
........
........
"""
    )
    assert new_b == expected
